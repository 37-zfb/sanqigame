syntax = "proto3";

package msg;
option java_package = "msg";

// 消息代号
enum MsgCode {

  WHO_ELSE_IS_HERE_CMD = 0;
  WHO_ELSE_IS_HERE_RESULT = 1;

  USER_QUIT_RESULT = 2;

  ATTK_CMD = 3;
  ATTK_RESULT = 4;

  USER_SUBTRACT_HP_RESULT = 5;

  DIE_RESULT = 6;

  USER_LOGIN_CMD = 7;
  USER_LOGIN_RESULT = 8;

  USER_REGISTER_CMD = 9;
  USER_REGISTER_RESULT = 10;

  ATTK_MONSTER_CMD = 11;

  STOP_CUR_USER_ALL_TIMER = 12;

  USER_SWITCH_SCENE_CMD = 13;
  USER_SWITCH_SCENE_RESULT = 14;

  MONSTER_START_ATTK_USER = 15;

  NOTICE_USER_ATTKED = 16;

  USER_SKILL_ATTK_CMD = 17;
  USER_SKILL_ATTK_RESULT = 18;

  SKILL_STATE_SWITCH = 19;

  ROB_EQUIPMENT_CMD = 20;

  BACKPACK_CMD = 21;
  BACKPACK_RESULT = 22;

  ROB_EQUIPMENT_RESULT = 23;

  USER_POTION_CMD = 24;
  USER_POTION_RESULT = 25;

  USER_RESUME_STATE_RESULT = 26;

  USER_WEAR_EQUIPMENT_CMD = 27;
  USER_WEAR_EQUIPMENT_RESULT = 28;

  USER_UNDO_EQUIPMENT_CMD = 29;
  USER_UNDO_EQUIPMENT_RESULT = 30;

  DURABILITY_DEFICIENCY_RESULT = 31;

  REPAIR_EQUIPMENT_CMD = 32;
  REPAIR_EQUIPMENT_RESULT = 33;

  MONSTER_DROP_HP_AUTO_DIE = 34;

  ENTER_DUPLICATE_CMD = 35;
  ENTER_DUPLICATE_RESULT = 36;

  ATTK_BOSS_CMD = 37;
  ATTK_BOSS_RESULT = 38;

  NEXT_BOSS_RESULT = 39;


  DUPLICATE_FINISH_RESULT = 40;

  USER_QUIT_DUPLICATE_CMD = 41;
  USER_QUIT_DUPLICATE_RESULT = 42;


  BOSS_ATTK_USER_RESULT = 43;

  BOSS_SKILL_ATTK_USER_RESULT = 44;

  BOSS_KILL_USER_RESULT = 45;

  USER_BUY_GOODS_CMD = 46;
  USER_BUY_GOODS_RESULT = 47;

  USER_CHAT_INFO_CMD = 48;
  USER_CHAT_INFO_RESULT = 49;

  SEND_MAIL_CMD = 50;
  SEND_MAIL_RESULT = 51;

  ALL_USER_CMD = 52;
  ALL_USER_RESULT = 53;

  NOTICE_USER_GET_MAIL_RESULT = 54;

  USER_SEE_MAIL_CMD = 55;
  USER_SEE_MAIL_RESULT = 56;

  USER_RECEIVE_MAIL_CMD = 57;
  USER_RECEIVE_MAIL_RESULT = 58;

  USER_ENTER_ARENA_CMD = 59;
  USER_ENTER_ARENA_RESULT = 60;

  USER_CHOOSE_OPPONENT_CMD = 61;
  USER_CHOOSE_OPPONENT_RESULT = 62;

  TARGET_USER_CHALLENGE_RESULT = 63;

  TARGET_USER_RESPONSE_CMD = 64;
  TARGET_USER_RESPONSE_RESULT = 65;

  USER_QUIT_ARENA_CMD = 66;
  USER_QUIT_ARENA_RESULT = 67;


  USER_ATTACK_CMD = 68;
  USER_ATTACK_RESULT = 69;

  USER_DIE_RESULT = 70;

  USER_TEAM_UP_CMD = 71;
  USER_TEAM_UP_RESULT = 72;

  ASK_TEAM_UP_RESULT = 73;

  USER_JOIN_TEAM_CMD = 74;
  USER_JOIN_TEAM_RESULT = 75;
  USER_QUIT_TEAM_CMD = 76;
  USER_QUIT_TEAM_RESULT = 77;
  USER_ENTER_TEAM_FAIL_RESULT = 78;

  USER_QUIT_TEAM_AND_DUPLICATE_CMD = 79;
  USER_QUIT_TEAM_AND_DUPLICATE_RESULT = 80;

  USER_SKILL_ATTK_DUPLICATE_RESULT = 81;
  PASTOR_SKILL_RESULT = 82;

  SUMMON_MONSTER_SUB_HP_RESULT = 83;
}

// 还有谁在场
///////////////////////////////////////////////////////////////////////
// 指令
message WhoElseIsHereCmd {
}

// 结果
message WhoElseIsHereResult {
  // 用户信息数组
  repeated UserInfo userInfo = 1;
}
// 用户信息
message UserInfo {
  // 用户 Id
  uint32 userId = 1;
  // 用户名称
  string userName = 2;

}
//
// 用户退场
///////////////////////////////////////////////////////////////////////
// 
// XXX 注意: 用户退场不需要指令, 因为是在断开服务器的时候执行
// 
// 结果
message UserQuitResult {
  // 退出用户 Id
  uint32 quitUserId = 1;
}

//
// 攻击
///////////////////////////////////////////////////////////////////////
// 指令
message AttkCmd {
  // 目标用户 Id
  uint32 targetUserId = 1;
  // 目标 怪
  repeated string attkedMonsterName = 2;
  // 怪 名
  string monsterName = 3;
}

// 结果
message AttkResult {
  // 被攻击的 怪
  uint32 monsterId = 1;
  // 减血量
  uint32 subHp = 2;
}

message AttkMonsterCmd {
  //怪 名
  string monsterName = 1;

}


// 死亡结果
message DieResult {
  // 目标用户 Id
  uint32 targetUserId = 1;
  // 死亡的怪id
  uint32 monsterId = 2;

  // 爆的装备
  uint32 propsId = 3;

  //之前是否已死
  bool isDieBefore = 4;

  //道具类型
  string propsType = 5;

  // 恢复蓝的终止时间
  uint64 resumeMpEndTime = 6;
}

//
// 用户登录
///////////////////////////////////////////////////////////////////////
// 指令
message UserLoginCmd {
  // 用户名称
  string userName = 1;
  // 用户密码
  string password = 2;
}

// 结果
message UserLoginResult {
  // 用户 Id,
  // 如果是 -1 则说明登录失败
  uint32 userId = 1;
  // 用户名称
  string userName = 2;

  // 血量
  uint32 hp = 3;

  // 蓝量
  uint32 mp = 4;

  // 所在地
  uint32 currSceneId = 5;

  // 存放数组
  repeated Npc npc = 6;

  // npc信息
  message Npc {
    // 用户名称
    string name = 1;
    // 场景名称
    uint32 id = 2;
    // 说的话
    string info = 3;

  }

  repeated Skill skill = 7;
  // 技能
  message Skill {
    // 技能id
    uint32 id = 1;
  }

  repeated Monster monster = 8;
  message Monster {
    uint32 id = 1;
    string name = 2;
    uint32 hp = 3;
    bool isDie = 4;
  }

  // 装备id
  repeated Props props = 9;

  // 恢复蓝的终止时间
  uint64 resumeMpEndTime = 10;

  // 已穿戴装备
  repeated WearEquipment wearEqu = 11;
  message WearEquipment {
    uint32 id = 1;
    uint32 equipmentId = 2;
    //耐久度
    uint32 durability = 3;
  }

  // 角色id
  uint32 professionId = 12;

  //金币
  uint32 money = 13;
  // 商品
  repeated GoodsLimit goodLimits = 14;
  message GoodsLimit {
    uint32 goodsId = 1;
    uint32 goodsNumber = 2;
  }
  // 未读邮件信息
  repeated MailInfo mailInfo = 15;
}
message Props {
  uint32 location = 1;
  uint32 propsId = 2;
  uint32 durability = 3;
  uint32 propsNumber = 4;
  uint32 userPropsId = 5;
}

// 用户注册
message UserRegisterCmd {
  // 用户名称
  string newUserName = 1;
  // 用户密码
  string newPassword = 2;
  // 职业id
  uint32 professionId = 3;
}
// 结果
message UserRegisterResult {

  bool isSucceed = 1;

}

//
// 停止所有定时任务
///////////////////////////////////////////////////////////////////////
// 指令
message StopCurUserAllTimer {
}

//
// 用户切换场景
///////////////////////////////////////////////////////////////////////
// 指令
message UserSwitchSceneCmd {

  uint32 toSceneId = 1;

}
//
// 用户切换场景
///////////////////////////////////////////////////////////////////////
// 结果
message UserSwitchSceneResult {
  // 存放数组
  repeated Npc npc = 1;

  // npc信息
  message Npc {
    // 用户名称
    string name = 1;
    // 场景名称
    uint32 sceneId = 2;
    // 说的话
    string info = 3;

    // NPC id
    uint32 id = 4;

  }

  // 怪信息数组
  repeated MonsterInfo monsterInfo = 2;
  // 怪信息
  message MonsterInfo {
    // 怪名称
    string name = 1;

    // 是否 存活
    bool isDie = 2;

    // 血量
    uint32 hp = 3;

    // id
    uint32 monsterId = 4;
  }
}
// 怪 发动攻击
message MonsterStartAttkUser {
}
// 通知玩家 被怪攻击
message NoticeUserAttked {
  repeated uint32 monsterId = 1;
}
// 玩家使用技能
message UserSkillAttkCmd {
  // 技能id
  uint32 skillId = 1;
}
// 玩家副本中使用技能结果
message UserSkillAttkDuplicateResult{

}
// 玩家使用技能  结果
message UserSkillAttkResult {
  // 是否成功
  bool isSuccess = 1;
  // 目标减血量
  uint32 subtractHp = 2;
  // 目标名称
  uint32 monsterId = 3;
  // false 原因
  string falseReason = 4;

  // 恢复蓝的终止时间
  uint64 resumeMpEndTime = 11;
}
// 切换技能状态； 冷却 ==> 非冷却
message SkillStateSwitch {
  // 技能id
  uint32 skillId = 1;
}
//  抢道具
message RobEquipmentCmd {
  // 怪id
  uint32 monsterId = 1;
  //类型
  uint32 type = 2;
}
// 强道具结果
message RobEquipmentResult {
  // 是否成功
  bool isSucceed = 1;
  // 类型 0：装备，1：药剂
  uint32 type = 2;
  // 道具id
  uint32 propsId = 3;
  // user equ表id
  uint32 userEquId = 4;

}

// 查询背包
message BackpackCmd {
}
// 查询背包结果
message BackpackResult {
  repeated uint32 equIdList = 1;

  repeated Potion potionList = 2;

  message Potion {
    uint32 potionId = 1;

    uint32 number = 2;
  }
}

// 使用药剂
message UserPotionCmd {
  uint32 location = 1;
}
// 使用药剂结果
message UserPotionResult {
  bool isSuccess = 1;

  uint32 location = 2;

  // 恢复蓝的终止时间
  uint64 resumeMpEndTime = 3;
  uint64 resumeMpEndTimeAuto = 4;

  // 恢复血的终止时间
  uint64 resumeHpEndTime = 5;

}
//用户恢复状态结果
message UserResumeStateResult {
  // 类型
  string type = 1;
  // 恢复的值
  uint32 value = 2;
}
// 穿戴装备命令
message UserWearEquipmentCmd {
  // 装备id
  uint32 location = 1;
  // 用户装备id
  uint32 userEquipmentId = 2;
}
// 穿戴装备结果
message UserWearEquipmentResult {
  // 道具id
  uint32 propsId = 1;
  // 用户装备id
  uint32 userEquipmentId = 2;
  // 位置
  uint32 location = 3;
}
// 脱装备
message UserUndoEquipmentCmd {
  // 装备id
  uint32 propsId = 1;
  // 用户装备id
  uint32 userEquipmentId = 2;
}
// 脱装备结果
message UserUndoEquipmentResult {
  // 装备id
  uint32 propsId = 1;
  // 用户装备id
  uint32 userEquipmentId = 2;
}
// 耐久度不足
message DurabilityDeficiencyResult {
  // 装备id
  uint32 propsId = 1;
  // 用户装备id
  uint32 userEquipmentId = 2;
}
// 修理装备 指令
message RepairEquipmentCmd {
  uint32 userEquipmentId = 1;
}
// 修理装备 结果
message RepairEquipmentResult {

  uint32 userEquipmentId = 1;
}
// 自动掉血死亡
message MonsterDropHpAutoDie {
  uint32 monsterId = 1;
}
// 进入副本命令
message EnterDuplicateCmd {
  uint32 duplicateId = 1;
}
// 进入副本结果
message EnterDuplicateResult {
  uint32 duplicateId = 1;
  uint64 startTime = 2;
  uint32 bossMonsterId = 3;
  bool isSuccess = 4;
  uint32 userId = 5;
}
// 对boss的普通攻击
message AttkBossCmd {
}
// 对boss的普通攻击结果
message AttkBossResult {
  uint32 subHp = 1;
  uint32 userId = 2;
  // 攻击类型; 召唤兽or用户
  string type = 3;
}
// 下个一个boss
message NextBossResult {
  uint32 bossMonsterId = 1;
  uint64 startTime = 2;
  uint32 userId = 3;
}
//副本结束
message DuplicateFinishResult {
  // 获得的道具id集合
  repeated uint32 propsId = 1;
  // 金币
  uint32 money = 2;

  repeated Props props = 3;

  uint32 userId = 4;
}
// 用户退出副本命令
message UserQuitDuplicateCmd {
}
// 用户退出副本结果
message UserQuitDuplicateResult {
  string quitDuplicateType = 1;
}
// boss攻击用户
message BossAttkUserResult {
  // 用户减血量
  uint32 subUserHp = 1;
}
// boss使用技能攻击用户
message BossSkillAttkUserResult {
  // 用户减血量
  uint32 subUserHp = 1;
}
// 展示商店
// 命令
message UserBuyGoodsCmd {
  uint32 goodsId = 1;
  uint32 goodsNumber = 2;
}
// 展示商店
// 结果
message UserBuyGoodsResult {
  // 是否成功
  bool isSuccess = 1;
  // 背包中的道具，前后端同步一下数据
  repeated Props props = 2;
  // 购买的商品id
  uint32 goodsId = 3;
  // 购买的商品数量
  uint32 goodsNumber = 4;

  // 失败码
  uint32 code = 5;
  // 失败原因
  string reason = 6;
}
// boss 击杀 玩家
message BossKillUserResult {
  // 玩家id
  uint32 targetUserId = 1;
}
// 用户聊天
// 指令
message UserChatInfoCmd {
  // 用户id
  uint32 targetUserId = 1;
  // 聊天内容
  string info = 2;
  // 聊天类型; 私聊or群聊???
  string type = 3;
}
// 用户聊天
// 结果
message UserChatInfoResult {
  // 用户名称
  string userName = 1;
  //类型
  string type = 2;
  //信息
  string info = 3;
}
// 发送邮件
// 指令
message SendMailCmd {
  // 要发送的道具id
  uint32 propsId = 1;
  // 该道具的数量
  uint32 number = 2;
  // 发件人名称
  uint32 srcUserId = 3;
  // 收件人id
  uint32 targetUserId = 4;
  // 钱
  uint32 money = 5;
  // 标题
  string title = 6;
}
// 发送邮件结果
message SendMailResult {
  bool isSuccess = 1;
}
// 所有的用户
// 命令
message AllUserCmd {
}
// 所有用户
// 结果
message AllUserResult {
  // 用户数组信息
  repeated UserInfo userInfo = 1;
}
// 通知用户获得邮件
message NoticeUserGetMailResult {
  // 邮件信息
  MailInfo mailInfo = 1;
}
// 用户查看邮箱，指令
message UserSeeMailCmd {
}
// 用户查看邮箱，结果
message UserSeeMailResult {
  repeated MailInfo mailInfo = 1;
}
// 邮箱信息
message MailInfo {
  // 邮件id
  uint32 mailId = 1;
  // 发送者
  string srcUserName = 2;
  // 邮件标题
  string title = 3;
}
// 用户接受邮件指令
message UserReceiveMailCmd {
  // -1时，表示一键领取全部
  uint32 mailId = 1;
}
// 用户接受邮件结果
message UserReceiveMailResult {
  // 领取成功的邮件id
  repeated uint32 mailId = 1;
}
// 进入竞技场
message UserEnterArenaCmd {
}
// 进入竞技场结果
message UserEnterArenaResult {
  repeated UserInfo userInfo = 1;
}

//用户选择对手，命令
message UserChooseOpponentCmd {
  uint32 userId = 1;
}
// 用户选择对手，结果
message UserChooseOpponentResult {
  // 是否接受挑战
  bool acceptChallenge = 1;
  // 发起者id
  uint32 originateUserId = 2;
  //
  uint32 originatedUserId = 3;
}
// 询问目标用户是否接受挑战
message TargetUserChallengeResult{
  // 发起者id
  uint32 originateUserId = 1;
}
// 目标用户响应
message TargetUserResponseCmd{
  // 是否同意
  bool isAgree = 1;
  // 发起者id
  uint32 originateUserId = 2;
}
// 用户退出竞技场，指令
message UserQuitArenaCmd{
}
// 用户退出竞技场，结果
message UserQuitArenaResult{
  UserInfo userInfo = 1;
}
// 用户在竞技场中，普通攻击指令
message UserAttackCmd{
  uint32 targetUserId = 1;
}
// 用户在竞技场中，普通攻击结果
message UserAttackResult{
  // 发动攻击的用户 Id
  uint32 attackUserId = 1;
  // 目标用户 Id
  uint32 targetUserId = 2;
}
// 用户减血结果
message UserSubtractHpResult {
  // 目标用户 Id
  uint32 targetUserId = 1;
  // 减血量
  uint32 subtractHp = 2;
}
// 用户死亡结果
message UserDieResult{
  uint32 targetUserId = 1;
}



// 用户组队申请，指令
message UserTeamUpCmd{
  uint32 targetUserId = 1;
}
// 用户组队申请，结果
message UserTeamUpResult{

}
// 询问用户是否同意组队
message AskTeamUpResult{
  //发起者id
  uint32  originateUserId = 1;
  // 发起者姓名
  string originateUserName = 2;
}
// 用户加入队伍 指令
message UserJoinTeamCmd{
  bool isJoin = 1;
  uint32 originateUserId = 2;
}
// 用户加入队伍 结果
message UserJoinTeamResult{
  repeated UserInfo userInfo = 1;
  uint32 teamLeaderId = 2;
  bool isJoin = 3;
}
// 用户退出队伍 指令
message UserQuitTeamCmd{
}
// 用户退出队伍 结果
message UserQuitTeamResult{
  UserInfo userInfo = 1;
  uint32 teamLeaderId = 2;
}
// 加入队伍失败
message UserEnterTeamFailResult{
}
//退出队伍和副本
message UserQuitTeamAndDuplicateCmd {
}
// 退出队伍和副本
message UserQuitTeamAndDuplicateResult{
}
// 牧师加血结果
message PastorSkillResult{
  uint32 hp = 1;
  uint32 mp = 2;
}
// 召唤兽掉血
message SummonMonsterSubHpResult{
  bool isDie = 1;
  uint32 subHp = 2;
}